1--- What happens when you initialize a repository? Why do you need to do it?

Initializing a repository sets up the current directory so that you can start
snapshotting files within it. If you don't initialize a repository, you won't be
able to commit files inside of that directory.


2--- How is the staging area different from the working directory and the
repository? What value do you think it offers?

The staging area is a temporary location for files that you intend to commit,
between the working directory and the repository. It allows you to carefully
select files that would be good to bundle together in a single, cohesive commit.


3--- How can you use the staging area to make sure you have one commit per
logical change?

You can check the contents of the staging area before committing to ensure that
each commit is a logical bundle.


4--- What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

Branches are helpful when you want to make two or more divergent versions of
your project. For example, if you are trying out an experimental feature that you
don't necessarily want in your working project. Branches let you maintain different
versions of your project so that new commits only affect one version. You can
easily 'checkout' branches to switch between versions of your project.


5--- How do the diagrams help you visualize the branch structure?

The diagrams allow you to see the order and parents of each of the commits so that
you can trace each commit's lineage.
